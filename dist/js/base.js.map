{"version":3,"sources":["core.js","ui.js","http.js"],"names":[],"mappingsfile":"base.js","sourcesContent":["/*\n\n*/\n\nfunction BaseJS(is_dev) {\n    if (is_dev === undefined) { is_dev = false; }\n    var base = this;\n    base.version = \"1.0.0\";\n    base.name = \"BaseJS\";\n    base.author = \"Jeeva\";\n\n    // private methods\n    var appendPrepend = function(e, t, n) {\n        if (\"string\" === typeof t) {\n            t = (new DOMParser).parseFromString(t, \"text/html\").getElementsByTagName(\"body\")[0].childNodes\n        } else t = [t];\n        for (var i = 0; i < t.length; i++) {\n            var s = t[i].cloneNode(!0);\n            n ? e.appendChild(s) : e.insertBefore(s, e.firstChild)\n        }\n    };\n\n    var addEvent = function(e, t, n) {\n        return e.addEventListener(t, n, !1), e.base_events || (e.base_events = []), e.base_events.push({\n            eType: t,\n            callBack: n\n        }), this;\n    };\n\n    this.fn = function (e) {\n        if (e instanceof HTMLElement) this.push(e);\n        else if (e instanceof HTMLCollection)\n            for (var t = 0; t < e.length; t++) this.push(e[t]);\n        else if (e === document) this.push(document);\n        else if (e === window) this.push(window);\n        else if (e instanceof Array)\n            for (t = 0; t < e.length; t++) this.push(e[t]);\n        else {\n            var n = document.querySelectorAll(e);\n            for (t = 0; t < n.length; t++) this.push(n[t])\n        }\n    };\n    this.fn.prototype = [];\n\n    this.fn.prototype.css = function (styles) {\n        base.in(this).each(function (key2, val2) {\n            base.in(styles).each(function (key, val) {\n                val2.style[key] = val;\n            });\n        });\n        return this;\n    };\n\n    this.fn.prototype.append = function (content) {\n        base.in(this).each(function (key, val) {\n            appendPrepend(val, content, true);\n        });\n        return this;\n    };\n\n    this.fn.prototype.prepend = function (content) {\n        base.in(this).each(function (key, val) {\n            appendPrepend(val, content);\n        });\n        return this;\n    };\n\n    this.fn.prototype.val = function (content) {\n        if (content === undefined) {\n            return this[0].value;\n        }\n        base.in(this).each(function (key, val) {\n            val.value = content;\n        });\n        return this;\n    };\n\n    this.fn.prototype.add = function (els) {\n        if (\"string\" === typeof els) {\n            els = document.querySelectorAll(els);\n        }\n\n        var currentObj = this;\n        base.in(els).each(function (key, val) {\n            currentObj.push(val);\n        });\n        return this;\n    };\n\n    this.fn.prototype.get = function (i) {\n        return base.select(this[i]);\n    };\n    \n    this.fn.prototype.addClass = function (cls) {\n        base.in(this).each(function (key, val) {\n            if (!val.classList.contains(cls)) {\n                val.classList.add(cls);\n            }\n        });\n        return this;\n    };\n\n    this.fn.prototype.removeClass = function (cls) {\n        base.in(this).each(function (key, val) {\n            if (val.classList.contains(cls)) {\n                val.classList.remove(cls);\n            }\n        });\n        return this;\n    };\n\n    this.fn.prototype.toggleClass = function (cls) {\n        base.in(this).each(function (key, val) {\n            if (val.classList.contains(cls)) {\n                val.classList.remove(cls);\n            } else {\n                val.classList.add(cls);\n            }\n        });\n        return this;\n    };\n\n    this.fn.prototype.html = function (s) {\n        if (s === undefined) {\n            return this[0].innerHTML;\n        }\n\n        base.in(this).each(function (i, el) {\n            el.innerHTML = s;\n        });\n        return this;\n    };\n\n    this.fn.prototype.attr = function (key, val) {\n        if (val === undefined) {\n            return this[0].getAttribute(key);\n        }\n\n        base.in(this).each(function (i, el) {\n            el.setAttribute(key, val);\n        });\n        return this;\n    };\n\n    this.fn.prototype.on = function () {\n        var _self = {};\n        var currentObj = this;\n        var args = arguments;\n        _self.call = function (callback) {\n            base.in(args).each(function (key, val) {\n                base.in(currentObj).each(function (i, el) {\n                    addEvent(el, val, callback);\n                });\n                return currentObj;\n            });\n        };\n\n        return _self;\n    };\n\n    this.fn.prototype.each = function (callback) {\n        base.in(this).each(function (key, val) {\n            callback(val);\n        });\n        return this;\n    };\n\n    this.fn.prototype.find = function(sel) {\n        _self = this;\n        _new = [];\n        base.in(this).each(function(i, el) {\n            var contain = document.createElement(\"div\");\n            contain.appendChild(el.cloneNode());\n            if (contain.querySelectorAll(sel).length > 0) {\n                _new.push(el);\n            }\n        });\n\n        base.in(this).each(function(i, el) {\n            _self.pop();\n        });\n\n        base.in(_new).each(function(i, el) {\n            _self.push(el);\n        });\n        return this;\n    };\n\n    this.fn.prototype.children = function(sel) {\n        var childs = [];\n        base.in(this).each(function(i, el) {\n            if (sel === undefined) {\n                base.in(el.children).each(function(j, child) {\n                    childs.push(child);\n                });\n            } else {\n                base.in(el.querySelectorAll(sel)).each(function(j, child) {\n                    childs.push(child);\n                });\n            }\n        });\n\n        base.in(this).each(function(i, el) {\n            _self.pop();\n        });\n        base.in(childs).each(function(i, el) {\n            _self.push(el);\n        });\n        return this;\n    };\n\n\n    this.fn.prototype.change = function(callback) {\n        base.in(this).each(function(i, el) {\n            el_old_value = el.value;\n            el.addEventListener(\"keyup\", function() {\n                if (el.value !== el_old_value) {\n                    callback(el);\n                }\n            }, false);\n        });\n        return this;\n    };\n}\n\nBaseJS.prototype.in = function (iterable) {\n    var keys = Object.keys(iterable);\n    if (iterable instanceof Array && keys[keys.length - 1] == \"length\") {\n        keys.pop();\n    }\n    var _self = {};\n    _self.first = iterable[0];\n    _self.last = iterable[iterable.length - 1];\n    _self.get = function(i) { return iterable[i]; };\n    _self.each = function (callback) {\n        var i;\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (iterable instanceof Array) {\n                key = parseInt(key);\n            }\n            callback(key, iterable[key]);\n        }\n    };\n    return _self;\n};\n\nBaseJS.prototype.select = function (sel) {\n    return new this.fn(sel);\n};\n\nBaseJS.prototype.ready = function(callback) {\n    window.addEventListener(\"load\", function() {\n        callback();\n    }, false);\n};","BaseJS.prototype.createUI = function (name) {\n    return this.select(document.createElement(name));\n};","BaseJS.prototype.http = function (url) {\n    var _self = {};\n    var _this = this;\n    var _params = \"\";\n    var http = new XMLHttpRequest();\n    _self.get = function (callback) {\n        if (callback !== undefined) {\n            http.onreadystatechange = function() {\n                callback(this);\n            };\n        }\n\n        if (url.indexOf(\"?\") === -1) {\n            url += \"?\" + _params;\n        } else {\n            url += \"&\" + _params;\n        }\n        http.open(\"GET\", url, true);\n        http.send();\n        return _self;\n    };\n\n    _self.ready = function (callback) {\n        http.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                callback(this);\n            }\n        };\n    };\n\n    _self.params = function(params) {\n        _this.in(params).each(function (key, val) {\n            _params += (key + \"=\" + val + \"&\")\n        });\n        _params = _params.substring(0, _params.length - 1);\n        return _self;\n    };\n\n    _self.post = function (callback) {\n        if (callback !== undefined) {\n            http.onreadystatechange = function() {\n                callback(this);\n            };\n        }\n\n        http.open(\"POST\", url, true);\n        http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        http.send(_params);\n        return _self;\n    };\n    return _self;\n};"]}